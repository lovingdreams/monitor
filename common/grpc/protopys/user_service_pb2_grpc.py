# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from common.grpc.protopys import user_service_pb2 as user__service__pb2

# import user_service_pb2 as user__service__pb2


class UserServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOrganisation = channel.unary_unary(
            "/user_service_proto.UserServices/GetOrganisation",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.OrganisationData.FromString,
        )
        self.GetOrganisationSettings = channel.unary_unary(
            "/user_service_proto.UserServices/GetOrganisationSettings",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.OrganisationSettings.FromString,
        )
        self.GetOrganisationWorkingHours = channel.unary_unary(
            "/user_service_proto.UserServices/GetOrganisationWorkingHours",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.WorkingHours.FromString,
        )
        self.GetOrganisationLocations = channel.unary_unary(
            "/user_service_proto.UserServices/GetOrganisationLocations",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.OrganisationLocations.FromString,
        )
        self.GetOrganisationStaff = channel.unary_unary(
            "/user_service_proto.UserServices/GetOrganisationStaff",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.OrganisationStaffs.FromString,
        )
        self.GetUserData = channel.unary_unary(
            "/user_service_proto.UserServices/GetUserData",
            request_serializer=user__service__pb2.UserItem.SerializeToString,
            response_deserializer=user__service__pb2.UserData.FromString,
        )
        self.GetUserAdditionalData = channel.unary_unary(
            "/user_service_proto.UserServices/GetUserAdditionalData",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.UserAdditionalData.FromString,
        )
        self.GetUserWorkingHours = channel.unary_unary(
            "/user_service_proto.UserServices/GetUserWorkingHours",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.WorkingHours.FromString,
        )
        self.GetUserAddress = channel.unary_unary(
            "/user_service_proto.UserServices/GetUserAddress",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.UserAddressArray.FromString,
        )
        self.GetUserPermissions = channel.unary_unary(
            "/user_service_proto.UserServices/GetUserPermissions",
            request_serializer=user__service__pb2.IdItem.SerializeToString,
            response_deserializer=user__service__pb2.UserPermissions.FromString,
        )


class UserServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOrganisation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrganisationSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrganisationWorkingHours(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrganisationLocations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrganisationStaff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserAdditionalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserWorkingHours(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetOrganisation": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrganisation,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.OrganisationData.SerializeToString,
        ),
        "GetOrganisationSettings": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrganisationSettings,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.OrganisationSettings.SerializeToString,
        ),
        "GetOrganisationWorkingHours": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrganisationWorkingHours,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.WorkingHours.SerializeToString,
        ),
        "GetOrganisationLocations": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrganisationLocations,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.OrganisationLocations.SerializeToString,
        ),
        "GetOrganisationStaff": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrganisationStaff,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.OrganisationStaffs.SerializeToString,
        ),
        "GetUserData": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserData,
            request_deserializer=user__service__pb2.UserItem.FromString,
            response_serializer=user__service__pb2.UserData.SerializeToString,
        ),
        "GetUserAdditionalData": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserAdditionalData,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.UserAdditionalData.SerializeToString,
        ),
        "GetUserWorkingHours": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserWorkingHours,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.WorkingHours.SerializeToString,
        ),
        "GetUserAddress": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserAddress,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.UserAddressArray.SerializeToString,
        ),
        "GetUserPermissions": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserPermissions,
            request_deserializer=user__service__pb2.IdItem.FromString,
            response_serializer=user__service__pb2.UserPermissions.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "user_service_proto.UserServices", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOrganisation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetOrganisation",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.OrganisationData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOrganisationSettings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetOrganisationSettings",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.OrganisationSettings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOrganisationWorkingHours(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetOrganisationWorkingHours",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.WorkingHours.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOrganisationLocations(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetOrganisationLocations",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.OrganisationLocations.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOrganisationStaff(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetOrganisationStaff",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.OrganisationStaffs.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserData(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetUserData",
            user__service__pb2.UserItem.SerializeToString,
            user__service__pb2.UserData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserAdditionalData(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetUserAdditionalData",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.UserAdditionalData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserWorkingHours(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetUserWorkingHours",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.WorkingHours.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserAddress(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetUserAddress",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.UserAddressArray.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserPermissions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_service_proto.UserServices/GetUserPermissions",
            user__service__pb2.IdItem.SerializeToString,
            user__service__pb2.UserPermissions.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
