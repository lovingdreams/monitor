# Generated by Django 4.1.5 on 2023-05-01 09:12

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organisation", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("organisation", models.CharField(max_length=100)),
                ("deleted_by", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("created_by", models.CharField(default="NULL", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                ("updated_by", models.CharField(default="NULL", max_length=100)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("info", models.JSONField(blank=True, default=dict, null=True)),
                ("fname", models.CharField(blank=True, max_length=100, null=True)),
                ("lname", models.CharField(blank=True, max_length=100, null=True)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("ccode", models.CharField(blank=True, max_length=10, null=True)),
                ("image", models.CharField(blank=True, max_length=150, null=True)),
                ("password", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "utype",
                    models.CharField(
                        choices=[
                            ("ADMIN", "admin"),
                            ("STAFF", "staff"),
                            ("ENDUSER", "enduser"),
                            ("VISITOR", "visitor"),
                            ("SUPERADMIN", "superadmin"),
                        ],
                        default="ENDUSER",
                        max_length=50,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("CONTACT_FORM", "contact_form"),
                            ("LIVE_CHAT", "live_chat"),
                            ("MANUAL", "manual"),
                            ("SELF", "self"),
                        ],
                        default="SELF",
                        max_length=50,
                    ),
                ),
                (
                    "external_ids",
                    models.JSONField(default=dict, verbose_name="External Ids"),
                ),
                ("verified", models.BooleanField(default=False)),
                ("initial_setup", models.BooleanField(default=True)),
            ],
            options={
                "unique_together": {
                    ("phone_number", "organisation", "ccode"),
                    ("email", "organisation"),
                },
            },
        ),
        migrations.CreateModel(
            name="UserOTPs",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("organisation", models.CharField(max_length=100)),
                ("deleted_by", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("created_by", models.CharField(default="NULL", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                ("updated_by", models.CharField(default="NULL", max_length=100)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("info", models.JSONField(blank=True, default=dict, null=True)),
                ("user", models.CharField(max_length=100)),
                ("otp", models.CharField(blank=True, max_length=20, null=True)),
                ("validity", models.IntegerField(blank=True, default=10, null=True)),
                (
                    "used_for",
                    models.CharField(
                        choices=[
                            ("LOGIN", "login"),
                            ("ACTIVATE", "activate"),
                            ("PASSWORDRESET", "passwordreset"),
                        ],
                        default="LOGIN",
                        max_length=100,
                    ),
                ),
                ("sent_to", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "sent_type",
                    models.CharField(
                        choices=[
                            ("SMS", "sms"),
                            ("MAIL", "mail"),
                            ("WHATSAPP", "whatsapp"),
                        ],
                        default="SMS",
                        max_length=100,
                    ),
                ),
                ("validated", models.BooleanField(default=False)),
                ("otp_count", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserProfiles",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("organisation", models.CharField(max_length=100)),
                ("deleted_by", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("created_by", models.CharField(default="NULL", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                ("updated_by", models.CharField(default="NULL", max_length=100)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("info", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "date_of_birth",
                    models.DateField(blank=True, null=True, verbose_name="Date"),
                ),
                ("gender", models.CharField(blank=True, max_length=20, null=True)),
                ("age", models.CharField(blank=True, max_length=20, null=True)),
                ("designation", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "specialisation",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("experience", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "qualification",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("description", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_departments",
                        to="organisation.departments",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_role_permission_role_permission",
                        to="organisation.rolespermissions",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_info_user",
                        to="users.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("organisation", models.CharField(max_length=100)),
                ("deleted_by", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("created_by", models.CharField(default="NULL", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                ("updated_by", models.CharField(default="NULL", max_length=100)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("info", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "date_of_birth",
                    models.DateField(blank=True, null=True, verbose_name="Date"),
                ),
                ("gender", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_profile_user",
                        to="users.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserDepartments",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("organisation", models.CharField(max_length=100)),
                ("deleted_by", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("created_by", models.CharField(default="NULL", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                ("updated_by", models.CharField(default="NULL", max_length=100)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("info", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_department_departments",
                        to="organisation.departments",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_department_users",
                        to="users.user",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "department")},
            },
        ),
    ]
